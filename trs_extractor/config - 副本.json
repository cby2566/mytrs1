{
"trsed_path":"F:\\啊飒飒\\www\\data\\",
"untrs_path":"F:\\大生产厂\\data\\",
"diff":0.1,
"difflist":true,
"upperkey":["list"],
"difflist2":true
}
记得删掉下面这段文字，文件名字删掉副本
"trsed_path"：已汉化游戏的data路径，注意要用双反斜杠，data后面也要有
"untrs_path"：原版游戏data路径
"diff"：（0-1），用来调整字典中有百分之多少的非str，list，dict数据不匹配时，仍认为这个字典是匹配的，仍对相应的文本进行替换（不匹配时不会替换文本），适当调高
这个数值，有利于减少漏翻，但是过高可能会导致bug，设为0时关闭此功能。发现bug，请调低或设为0
"difflist"，"upperkey"，"difflist2"三个配套，修改的话仔细看看最后几段话，不懂最好别改。没有改，但是出了bug的话，把两个true改成false。

☆所有漏翻文本均可通过untrsfix提取，并手动机翻补足。所以在没有把握的情况下，推荐宁愿机翻补足，也不要冒险出bug，特别是在你不会找bug原因的情况下。
并且无论如何，版本更新后的新增文本都要手动不足机翻。

"difflist"：（true或false）为true时，当list长度不匹配，且list内存在文本数据时，会直接用已翻译的旧版list覆盖新版list。为false时，会导致这种文本漏翻，
但是设置为true可能会导致bug。
"upperkey"：对上面的功能增加限制，只有在这个list的上级路径是dict，且dict的key包含在该项对应的list内时，才会启用上面的功能。整体来讲，会降低
bug几率
"difflist2"：在list长度不相等，但是不满足上面两项共同判断的条件时，是否对文本进行替换。开启此功能，可能会导致涉及到的文本错位，但关闭此功能
会导致这部分文本漏翻。
以某个游戏举例来说：
关闭"difflist"，出现了游戏中部分文本漏翻的情况。但是只打开"difflist"，又会导致回想房间丢失版本更新后多出的新cg。这是因为储存cg的数据是一个list，
多出的新cg会导致新旧两个版本的cg list长度不匹配，而在开启"difflist"的情况下，选择保留了旧版的cg list。
"upperkey"是为了解决上述问题新增的判断条件，储存游戏文本的list和储存游戏事件的list分属不同的层级，它们的key是不同的，那么只需筛选出文本list
所对应的key，就可以实现只对游戏文本应用"difflist"功能。"upperkey"就是用来储存这些文本list所对应的key的。
但是增加"upperkey"后又会出现新问题，那就是被"upperkey"屏蔽掉的list，如果它的内部也存有游戏文本，这些文本就会被漏翻掉。以我用来测试的游戏来说
就是回想房间内的所有文本（CG名称和选项等）都被漏翻了。而这些文本都有一个特点，就是按顺序从上往下替换，基本不会出错。
开启"difflist2"就可以实现这一功能，最终在三个条件共同作用下，我实现了“游戏文本没有漏翻，cg没有缺失”的最理想效果（至少我还没发现其他bug）。